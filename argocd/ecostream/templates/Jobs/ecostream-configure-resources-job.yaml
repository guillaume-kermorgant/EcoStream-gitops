apiVersion: batch/v1
kind: Job
metadata:
  name: ecostream-configure-resources
  namespace: "{{ .Values.namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  template:
    spec:
      serviceAccountName: ecostream-sa
      containers:
        - name: configure-resources
          image: "{{ .Values.tools.kubectl.image.repository }}:{{ .Values.tools.kubectl.image.tag }}"
          env:
          - name: NAMESPACE
            value: "{{ .Values.namespace }}"
          - name: ECOSTREAM_CONFIGMAP_NAME
            value: "{{ .Values.settings.ecostreamConfiMapName }}"
{{- if .Values.settings.ecostreamHostname }}
          - name: ECOSTREAM_HOSTNAME
            value: "{{ .Values.settings.ecostreamHostname }}"
{{- end }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              echo "Retrieving Ecostream Manager Ingress address..."

              if [ -z "${ECOSTREAM_HOSTNAME}" ]; then
                ecostreamManagerAddress="http://$(kubectl get ingress ecostream-manager-ingress -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
              else
                ecostreamManagerAddress="https://manager.${ECOSTREAM_HOSTNAME}"
              fi

              echo "Ecostream Manager Ingress address is $ecostreamManagerAddress"

              echo "Creating/updating Ecostream ConfigMap..."
              kubectl patch configmap $ECOSTREAM_CONFIGMAP_NAME \
                --namespace $NAMESPACE \
                --type merge \
                -p "{\"data\":{\"ECOSTREAM_MANAGER_URL\":\"${ecostreamManagerAddress}\"}}"

              echo "Done!"

      restartPolicy: Never
  backoffLimit: 2
